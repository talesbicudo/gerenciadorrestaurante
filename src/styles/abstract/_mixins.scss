// Float clearfix
@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

// Centering with absolute position method
@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// darks element bg on hover
@mixin hoverableBg($bg-color) {
    background-color: $bg-color;
    &:hover {
        cursor: pointer;
        background-color: darken($bg-color, 10%);
    }
}

//flex grid 
@mixin flexGrid {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    list-style: none;
    align-items: top;
    width: 100%;
    height: 100%;
    &-item {
        width: 50%;
        height: auto;
        min-width: 18rem;
        max-width: 20rem;
        @include respond(tab-port) {
            width: 33.3333%;
        }
        @include respond(desktop) {
            width: 25%;
        }
    }
}


// MEDIA QUERY MANAGER (Mobile first scheme)
/*
0 - 600px:      Phone (without breakpoints)
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
1200 - 1800     Desktop
1800px + :      Big desktop

$breakpoint arguement choices:
- tab-port
- tab-land
- desktop
- big-desktop

1em = 16px
*/

@mixin respond($breakpoint) {
    @if $breakpoint==tab-port {
        @media only screen and (min-width: 37.5em) {
            @content
        }
        ; //600px
    }
    @if $breakpoint==tab-land {
        @media only screen and (min-width: 56.25em) {
            @content
        }
        ; //900px
    }
    @if $breakpoint==desktop {
        @media only screen and (min-width: 75em) {
            @content
        }
        ; //1200px
    }
    @if $breakpoint==big-desktop {
        @media only screen and (min-width: 112.5em) {
            @content
        }
        ; //1800
    }
}